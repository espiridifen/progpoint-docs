{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Please select your language.","text":"<p>[en.md]</p> <p>[[es.md]]</p>"},{"location":"en/","title":"English","text":"<p>Welcome to the Progpoint manual. Here you will find everything you need to understand how to use the application and its functionalities.</p>"},{"location":"en/#getting-started-with-progpoint","title":"Getting Started with Progpoint","text":"<p>The latest version of Progpoint is available at its website.</p> <p>Compile locally</p> <p>If you prefer, you can compile it from the main repository to run it locally.&gt; To compile, you need at least NodeJS version 22.13.1 and npm version 10.9.2. Inside the <code>progpoint-app</code> folder, run the following commands:</p> <pre><code>npm install\nnpm run dev\n</code></pre> <p>Once the application starts, you will see the Agent Blueprints window, initially empty.</p>"},{"location":"en/#interfaces","title":"Interfaces","text":""},{"location":"en/#agent-blueprints","title":"Agent Blueprints","text":"<p>You can add new nodes by dragging them from the accordions on the right, and you can select which Agent Blueprint to modify using the selector at the top right. The search box in the top-left corner lets you select which Agent Blueprint to edit, or create a new one.</p> <p>To design blueprints, drag basic and stat nodes into the node map, and connect them to form agent progression designs. Agent instances will calculate their stats based on the values received by stat nodes. If multiple nodes of the same stat exist in a blueprint, the final value for that stat will be the sum of all its nodes.</p> <p>Known issues</p> <p>Some stat nodes may duplicate or even triple. If, when instantiating agents, you see values that don\u2019t match your design, delete the stat nodes from the related Agent Blueprint and place them again.</p>"},{"location":"en/#basic-nodes-accordion","title":"Basic Nodes Accordion","text":"<p>Accordion that includes the basic nodes. With a blueprint open, you can drag them into the node map area to create new nodes: - Note Node: A node with a text box to write notes about the blueprint. Every new Agent Blueprint includes a note node encouraging you to drag nodes from the accordions. - Parameter Node: Represents one of the parameters defined in the parameters accordion. Used as input for function or math nodes to perform calculations. - Math Node: Defines a calculation (addition, subtraction, multiplication, or division) between two input nodes, returning the result as output. - Function Node: Represents a function previously defined in the Function Designer, taking an input value for X and returning the result of that function.</p>"},{"location":"en/#stats-accordion","title":"Stats Accordion","text":"<p>Accordion that includes all the stats defined in the project. You can drag them into the node map to create stat instances in the currently open Agent Blueprint. If multiple nodes of the same stat exist in the blueprint, the final value for that stat will be the sum of all nodes. You can also create, modify, and delete stats, as well as define their mutability.</p>"},{"location":"en/#parameters-accordion","title":"Parameters Accordion","text":"<p>Accordion that appears when an Agent Blueprint is selected. It includes a button to create new parameters. Here you\u2019ll also find all the parameters created for the selected blueprint, as well as the default values given when creating a new instance.</p>"},{"location":"en/#function-designer","title":"Function Designer","text":"<p>In this interface, you can create mathematical functions. In the selector on the left, you can view the functions you have created, as well as create new ones. For the selected function, you can type in the upper-left text box the form it should take. Progpoint accepts simple single-variable functions, and if the function is valid, a preview will appear in the graph below.</p>"},{"location":"en/#agent-instantiator","title":"Agent Instantiator","text":"<p>In this interface, you can use previously designed Agent Blueprints to create agent instances for use in the simulator. Using the search bar at the top, you can search agent instances by name.</p> <p>For each agent instance, you can modify the following values: * Parameters: All parameters start with the initial values assigned in the Designer, but you can modify them as you like for each instance. * Agent Actions: You can add actions to the instance for use in the simulator. The agent will attempt actions in order, starting from the top; if requirements are not met, it will try the next one. * Other actions: You can change the blueprint from which the agent instance originates, duplicate it, or delete it if needed.</p>"},{"location":"en/#action-designer","title":"Action Designer","text":"<p>In this interface, you can design the actions that agent instances use in the simulator. It includes an action search tool, which works the same as the one in the Instantiator. Each action is defined by the following values:</p> <ul> <li>Cost Stat: The stat consumed when using the ability.</li> <li>Cost: The value consumed by the action. It can be positive, negative, or 0.</li> <li>Calculators: Numerical factors that determine the action\u2019s effectiveness, e.g., the damage it deals. For each calculator, you must specify: \u00a0 - Source: Whether the stat comes from the acting agent or the target agent. \u00a0 - Stat: The stat that provides the value to the calculation function. \u00a0 - Function: The calculation function. \u00a0 - Type: Determines whether the calculator\u2019s effectiveness result is additive or multiplicative with respect to the others.</li> </ul> <p>About calculators</p> <p>Calculators are processed in creation order, from top to bottom. The initial value of an action before any calculator is 0, so no multiplicative calculator will affect the value until the first additive calculator is applied.</p>"},{"location":"en/#simulator","title":"Simulator","text":"<p>In the simulator interface, you can define and create new simulations. When creating a simulation, you must set the following properties: - HP Stat: The stat that determines whether an agent is incapacitated and can no longer fight. - Turn order: Decides whether turn order is random or sorted by the value of a stat.</p> <p>Once a simulation is created, you must assign agents to the ally and enemy teams and define simulation rules for them.</p> <p>[!IMPORTANT] Simulation rules Simulation rules define the iterations of the simulations. For each rule, 50 battles are run.</p> <p>Simulation rules have the following components: - Targets: The agents affected by the rule. - Parameter: The parameter modified by the rule. All target agents must have this parameter for it to be selectable. - Range: The numeric range through which the rule iterates. - Increment: The value by which the parameter increases in each iteration.</p> <p>Once the simulation is ready, click Batch Simulation to run it. The results will appear below once finished.</p> <p>About the simulation</p> <p>When you click Batch Simulation, the application\u2019s UI becomes unresponsive. Currently, if you open the console (usually with F12), you can view the simulation progress. A progress confirmation feature will be added in future updates.</p>"},{"location":"es/","title":"Espa\u00f1ol","text":"<p>Bienvenido al manual de Progpoint. Aqu\u00ed encontrar\u00e1s todo lo necesario para entender el uso de la aplicaci\u00f3n y las funcionalidades que tiene</p>"},{"location":"es/#empezando-con-progpoint","title":"Empezando con Progpoint","text":"<p>La \u00faltima versi\u00f3n de Progpoint est\u00e1 accesible desde su p\u00e1gina web.</p> <p>Compilar en local</p> <p>Si se quiere, se puede compilar desde el repositorio principal para su ejecuci\u00f3n en local.</p> <p>Para la compilaci\u00f3n, se requiere como m\u00ednimo la versi\u00f3n de NodeJS 22.13.1 y la versi\u00f3n de npm 10.9.2. Dentro de la carpeta progpoint-app, se necesitan ejecutar los siguientes comandos: <pre><code>npm install\nnpm run dev\n</code></pre></p> <p>Una vez iniciada la aplicaci\u00f3n, se nos mostrar\u00e1 la ventana de Agent Blueprints en vac\u00edo.</p>"},{"location":"es/#las-interfaces","title":"Las interfaces","text":""},{"location":"es/#agent-blueprints","title":"Agent Blueprints","text":"<p>Puedes a\u00f1adir nuevos nodos arrastr\u00e1ndolos desde los acordeones de la derecha, y puede seleccionar qu\u00e9 Plano de Agente modificar con el selector de arriba a la derecha. El buscador de la esquina superior izquierda te permite seleccionar qu\u00e9 plano de agente editar, o si se quiere crear un plano de agente nuevo.</p> <p>Para dise\u00f1ar los planos, se han de arrastrar nodos b\u00e1sicos y de estad\u00edstica al plano de nodos, y conect\u00e1ndolos entre ellos para formar dise\u00f1os de progresi\u00f3n. Las instancias de agente calcular\u00e1n sus estad\u00edsticas a partir de los valores que le lleguen a los nodos de estad\u00edsticas. Si hay varios nodos de la misma estad\u00edstica en el plano, el valor final de esa estad\u00edstica ser\u00e1 la suma de todos sus nodos de estad\u00edstica.</p> <p>Errores conocidos</p> <p>Es posible que algunos nodos de estad\u00edsticas se dupliquen o tripliquen. Si al instanciar agentes ves valores que no te cuadran con tu dise\u00f1o, borra los nodos estad\u00edstica del plano de agente relacionado y col\u00f3calos de nuevo.</p>"},{"location":"es/#acordeon-de-nodos-basicos","title":"Acorde\u00f3n de Nodos b\u00e1sicos","text":"<p>Acorde\u00f3n donde se incluyen los nodos b\u00e1sicos. Con un plano abierto, se pueden arrastrar a la zona del mapa de nodos para crear nodos nuevos: - Nodo Nota: Un nodo con un cuadro de texto en el que escribir notas y apuntes sobre el plano. Todos los planos de agentes nuevos tienen un nodo de nota en el que te anima a arrastrar nodos de los acordeones. - Nodo Par\u00e1metro: Simboliza uno de los par\u00e1metros definidos en el acorde\u00f3n de par\u00e1metros. Usado para servir de entrada a nodos de funci\u00f3n o de matem\u00e1ticas para realizar c\u00e1lculos. - Nodo de Matem\u00e1ticas: Define un c\u00e1lculo (suma, resta, multiplicaci\u00f3n o divisi\u00f3n) entre dos nodos de entrada, devolviendo el resultado como salida. - Nodo Funci\u00f3n: Simboliza una funci\u00f3n previamente definida en el dise\u00f1ador de funciones, recibiendo un valor de entrada para X y devolviendo el valor de esa funci\u00f3n.</p>"},{"location":"es/#acordeon-de-estadisticas","title":"Acorde\u00f3n de Estad\u00edsticas","text":"<p>Acorde\u00f3n donde se incluyen todas las estad\u00edsticas definidas en el proyecto. Se pueden arrastrar a la zona del mapa de nodos para crear instancias de estad\u00edstica en el plano de agente abierto. Si hay varios nodos de la misma estad\u00edstica en el plano, el valor de esa estad\u00edstica para ese plano ser\u00e1 la suma de todos los nodos. Tambi\u00e9n se pueden crear, modificar y borrar estad\u00edsticas, as\u00ed como definir su mutabilidad.</p>"},{"location":"es/#acordeon-de-parametros","title":"Acorde\u00f3n de Par\u00e1metros","text":"<p>Acorde\u00f3n que aparece con un plano de agente seleccionado. Incluye un bot\u00f3n para crear par\u00e1metros nuevos. Tambi\u00e9n se encuentran aqu\u00ed todos los par\u00e1metros creados para el plano seleccionado, as\u00ed como los valores que se les da por defecto al crear una instancia nueva.</p>"},{"location":"es/#disenador-de-funciones","title":"Dise\u00f1ador de Funciones","text":"<p>En esta interfaz, puedes crear funciones matem\u00e1ticas. En el selector de la izquierda puedes ver las funciones que has creado, as\u00ed como crear funciones nuevas. Para la funci\u00f3n selecionada, puedes escribir en la caja de texto superior izquierda qu\u00e9 forma debe tomar. Progpoint acepta funciones simples de una variable, y si la funci\u00f3n es aceptable aparecer\u00e1 una previsualizaci\u00f3n en la gr\u00e1fica de debajo.</p>"},{"location":"es/#instanciador-de-agentes","title":"Instanciador de Agentes","text":"<p>En esta interfaz, puedes utilizar los planos de agente previamente dise\u00f1ados para crear instancias de agente para utilizar en el simulador. Con el buscador de la parte superior, puedes buscar instancias de agente por nombre.</p> <p>Para cada instancia de agente, se pueden modificar los siguientes valores:</p> <ul> <li>Par\u00e1metros: Todos los par\u00e1metros empiezan con los valores iniciales asignados en el Dise\u00f1ador, pero puedes modificarlos a tu gusto para cada instancia.</li> <li>Acciones de Agente: Puedes a\u00f1adir acciones a la instancia para que las utilice en el simulador. El agente realizar\u00e1 acciones en orden de asignaci\u00f3n, intentando realizar la acci\u00f3n m\u00e1s alta, y bajando por la lista si no tiene los requerimientos para lanzarla.</li> <li>Otras acciones: Puedes modificar el plano de donde viene la instancia de agente, duplicarla y borrar la instancia si lo necesitas.</li> </ul>"},{"location":"es/#disenador-de-acciones","title":"Dise\u00f1ador de Acciones","text":"<p>En esta interfaz puedes dise\u00f1ar las acciones que utilizan las instancias de agentes en el simulador. Cuenta con un buscador de acciones, que funciona de la misma manera que el que se encuentra en el Instanciador. Cada acci\u00f3n est\u00e1 definida por los siguientes valores:</p> <ul> <li>Estad\u00edstica de coste: La estad\u00edstica que se consumir\u00e1 al lanzar la habilidad.</li> <li>Coste: El valor que consume la acci\u00f3n al usarse. Puede ser positiva, negativa o 0.</li> <li>Calculadores: Factores num\u00e9ricos que indican la efectividad de la acci\u00f3n, p.ej el da\u00f1o que realiza. Para cada calculador, se tiene que determinar:<ul> <li>Origen: Agente origen de la estad\u00edstica ya sea el agente actor o el agente objetivo</li> <li>Estad\u00edstica: Estad\u00edstica que da el valor a la funci\u00f3n c\u00e1lculo.</li> <li>Funci\u00f3n: Funci\u00f3n c\u00e1lculo.</li> <li>Tipo: Determina si el resultado de este calculador de efectividad es aditivo o multiplicativo en respecto a los dem\u00e1s.</li> </ul> </li> </ul> <p>Sobre los calculadores</p> <p>Los calculadores se calculan en orden de creaci\u00f3n, de arriba hacia abajo. El valor inicial de la acci\u00f3n antes de ning\u00fan calculador es 0, as\u00ed que ning\u00fan calculador multiplicativo modificar\u00e1 el valor hasta el primer calculador aditivo.</p>"},{"location":"es/#simulador","title":"Simulador","text":"<p>Dentro de la interfaz de simulador puedes definir y crear nuevas simualciones. Al crear una simulaci\u00f3n, tienes que definir las siguientes propiedades:</p> <ul> <li>Estad\u00edstica de HP: La estad\u00edstica que determina si un agente est\u00e1 incapacitado y no puede seguir combatiendo.</li> <li>Orden de turno: Decide si el turno se decide de manera aleatoria o si se ordenan por el valor en una estad\u00edstica.</li> </ul> <p>Una vez creada la simulaci\u00f3n, se le tienen que asignar agentes a los equipos aliados y enemigos y se les crea reglas de simulaci\u00f3n.</p> <p>Reglas de simulaci\u00f3n.</p> <p>Las reglas de simulaci\u00f3n son lo que definen las iteraciones de las simulaciones. Por cada regla de simulaci\u00f3n, se realizan 50 combates.</p> <p>Las reglas de simulaci\u00f3n tienen los siguientes componentes: - Objetivos: Los agentes a los que hace efecto la regla - Par\u00e1metro: El par\u00e1metro que modifica la regla. Todos los agentes objetivos deben tener el par\u00e1metro para que este sea seleccionable - Rango: Rango num\u00e9rico por el que pasa la regla. - Incremento: Valor que aumenta el par\u00e1metro en cada iteraci\u00f3n.</p> <p>Una vez se tiene preparada la simulaci\u00f3n, haz click en Batch Simulation para simular. Los resultados aparecer\u00e1n abajo una vez terminen.</p> <p>Sobre la simulaci\u00f3n</p> <p>Al hacer click en Batch Simulation, la UI de la aplicaci\u00f3n deja de responder. Ahora mismo, si abres la consola (generalmente con F12) puedes ver el progreso de la simulaci\u00f3n. En siguientes actualizaciones se a\u00f1adir\u00e1 una confirmaci\u00f3n del progreso de la simulaci\u00f3n</p>"}]}